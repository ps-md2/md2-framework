package de.wwu.md2.framework.generator.ios

import de.wwu.md2.framework.mD2.Attribute
import de.wwu.md2.framework.mD2.BooleanType
import de.wwu.md2.framework.mD2.DateTimeType
import de.wwu.md2.framework.mD2.DateType
import de.wwu.md2.framework.mD2.Entity
import de.wwu.md2.framework.mD2.EnumType
import de.wwu.md2.framework.mD2.FloatType
import de.wwu.md2.framework.mD2.IntegerType
import de.wwu.md2.framework.mD2.ReferencedType
import de.wwu.md2.framework.mD2.StringType
import de.wwu.md2.framework.mD2.TimeType
import java.util.Date

class ModelClass {
	
	def static createModelH(Entity entity) '''
		//
		//  «entity.name.toFirstUpper»Entity.h
		//
		//  Generated by MD2 framework on «new Date()».
		//  Copyright (c) 2012 Uni-Muenster. All rights reserved.
		//
		
		#import <CoreData/CoreData.h>
		#import "«IOSGenerator::md2LibraryImport»/DataTransferObject.h"
		«FOR attribute : entity.attributes»
			«IF getEntityNames(entity, attribute) != null»#import "«getEntityNames(entity, attribute)».h"«ENDIF»
		«ENDFOR»
		
		@interface «entity.name.toFirstUpper»Entity : DataTransferObject
		
		«FOR attribute : entity.attributes»
			@property (retain, nonatomic) «attributeTypeName(entity, attribute)»* «attribute.name»;
		«ENDFOR»
		
		@end
		
		«IF entity.attributes.exists(a | a.type.many)»
			// methods for the handling of "to many" relationships
			@interface «entity.name.toFirstUpper»Entity (CoreDataGeneratedAccessors)
			
			«FOR attribute : entity.attributes»
				«IF (attribute.type instanceof ReferencedType && (attribute.type as ReferencedType).entity instanceof Entity && attribute.type.many)»
					- (void) add«attribute.name.toFirstUpper»Object: («(attribute.type as ReferencedType).entity.name.toFirstUpper»Entity *) value;
					- (void) remove«attribute.name.toFirstUpper»Object: («(attribute.type as ReferencedType).entity.name.toFirstUpper»Entity *) value;
					- (void) add«attribute.name.toFirstUpper»: (NSSet *) values;
					- (void) remove«attribute.name.toFirstUpper»: (NSSet *) values;
					
				«ENDIF»
			«ENDFOR»
			@end
		«ENDIF»
	'''
	
	def static createModelM(Entity entity) '''
		//
		//  «entity.name.toFirstUpper»Entity.m
		//
		//  Generated by MD2 framework on «new Date()».
		//  Copyright (c) 2012 Uni-Muenster. All rights reserved.
		//
		
		#import "«entity.name.toFirstUpper»Entity.h"
		
		@implementation «entity.name.toFirstUpper»Entity
		
		«FOR attribute : entity.attributes»
			@dynamic «attribute.name»;
		«ENDFOR»
		
		@end
	'''
	
	def private static attributeTypeName(Entity entity, Attribute attribute) {
		if (attribute.type.many) {
			'''NSSet'''
		}
		else {
			switch attribute.type {
				ReferencedType : if((attribute.type as ReferencedType).entity instanceof Entity)
						(attribute.type as ReferencedType).entity.name + "Entity" else "NSNumber"
				IntegerType : "NSNumber"
				FloatType : "NSNumber"
				StringType : "NSString"
				BooleanType : "NSNumber" 
				DateType : "NSDate"
				TimeType : "NSDate"
				DateTimeType : "NSDate"
				EnumType : "NSNumber"
			}
		}
	}
	
	def private static getEntityNames(Entity entity, Attribute attribute) {
		if(attribute.type instanceof ReferencedType && (attribute.type as ReferencedType).entity instanceof Entity) {
			(attribute.type as ReferencedType).entity.name + "Entity"
		}
	}
}
